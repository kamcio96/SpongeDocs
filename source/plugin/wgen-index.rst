================
World Generation
================

World Generation in Minecraft is a complicated process, and Sponge adds its own complications too.
Here we provide a basic overview of how it works for the interested reader.
You may choose to skip this and move directly to the API details here:

[Links to WGen API pages TBA]


An Overview of World Generation in Minecraft
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

World generation in Minecraft is based on *chunks*. Whenever the game calls for a chunk which does not yet exist,
a request is made to the world generator to provide that chunk. The world generation process to provide this 
chunk is split into two distinct phases, named ``generation`` and ``population``.

The Generation Phase
--------------------

The first phase in providing a chunk is the *Generation Phase*. This is primarily responsible for the 
creation of the base terrain shape, the generation of biomes, and larger features such as villages and caves.

.. Note::
	Block placement in the generation phase takes place entirely within a buffer,
	as the Chunk object is not created until the last step in the phase.

In the beginning, there is nothing, and then the base generator populator creates the basic shape of the terrain.
At this stage the world is entirely made of stone. Default generation is simply a heightmap generated from 
perlin noise, then filled in - leaving air if higher than sea level, and water if below. This step can be overridden
by calling ``setBaseGeneratorPopulator`` to provide your own custom populator to the world generator.

Next, the biome generator populates a 2d biome buffer with the biomes that will correspond to each 1x1 column
within the chunk. Using this biome buffer, the generator replaces the top layers of the terrain with the
``BlockStates`` and depths specified by the biome's ``GroundCoverLayers``. The biomes are provided by a
``BiomeGenerator`` - which may also be applied to the world generator with the ``setBiomeGenerator`` method. 

Now that the base terrain has been generated and primed, we run through the ``GeneratorPopulator``\ s (*genpop*
hereafter). These come in two groups: those specified globally for the world generator, and those specified for
a specific biome. The set of genpops used is the union of the set of all genpops specified, for all biomes 
present in the chunk.

``GeneratorPopulator``\ s are designed for large intensive operations, and are applied to the buffer rather than
the (as yet non-existent) Chunk object. This means that there must be the restriction that genpops may not place
any blocks outside of the confines of the currently generating chunk. Content being generated by a genpop which
spans multiple chunks must generate in pieces using the chunk position and world seed to determine which piece
of the whole goes into the current chunk.

Finally, with the base terrain created, the biomes applied, and the ``GeneratorPopulator``\ s run, we have
completed the generation phase, and the Chunk object can be constructed and returned.

The Population Phase
--------------------

The *Population Phase* can only run on a chunk once the three chunks adjacent to it in the positive x and z axes
are loaded. This allows objects during this phase to expand outside the 16x16 chunk area being populated, without
requiring the partial generation used for ``GeneratorPopulator``\ s. To support this, the actual area populated
during this phase is a 16x16 area offset by 8 in each of the x and z axes.

[Image TBA ?]

At this time the populators defined globally and those defined for the biome specified for the centre block of
the populating region (which is the maximal block of the chunk passed to the populator due to the offset
specified above). ???

Populators are ideal for small features (eg. desert wells) and additional terrain covering (eg. trees).
Sponge provides access to a great number of vanilla specified populators which may be reconfigured for your use.


